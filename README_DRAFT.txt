
# **Pedigree Painter (PePa)**

---

PePa is a visualization tool for genomics data that can be used to visualize which and how much of the parental genome has been inherited by the offspring. The code can generate data optimized for ggplot2 and create its own graphic output. The graphic part of the tool is optimized for tens of offspring but has been tested on up to 250 samples with 30 chromosomes each. 

---

## **Description**
The script automates the following tasks:
2. Processes VCF files for SNPs clustering and ancestry identification.
3. Refines clusters and makes files suitable for ancestry-based visualizations.
4. Optionally computes gene-based ancestry statistics.

---

## **Usage**

### **Basic Command**
```bash
./pepa.sh -i ListVCF.txt -o Results -1 Parent1.vcf -2 Parent2.vcf -c 100
```

### **Required Flags**
| Flag | Description |
|------|-------------|
| `-i` | Specify a file with a list of VCF files (one per sample). |
| `-o` | Specify the base name for output files. |
| `-1` | Specify the first parental VCF file for comparison. |
| `-2` | Specify the second parental VCF file for comparison. |
| `-c` | Specify the clustering size for SNP regions (e.g., 100). |

### **Optional Flags**
| Flag | Description |
|------|-------------|
| `-I` | Specify a comparison table (generated by `pepa-table`). |
| `-G` | Provide a GTF file for annotation conversion. |
| `-A` | Provide an annotation file containing all genome genes. |
| `-C` | Generate and plot chromosome-wide ancestry percentages (default: inactive). |
| `-h` | Display the help message and usage instructions. |

---

## **Pipeline Workflow**

### **1. Input Validation**
- Ensures Python 3 is installed.
- Validates the presence of required input files and flags.
- Prevents incompatible flag combinations (e.g., `-i` with `-I` or `-G` with `-A`).

---

### **2. Pipeline Steps**

#### **Part 0: VCF File Preparation**
- Converts input VCF files into a tabulated format using:
  ```bash
  PePa_BC_VCFtoTable.py
  ```
- Outputs:
  - `_Tabulated.csv`: A cleaned and formatted version of the input.

#### **Part 1: Transformation**
- Transforms the tabulated VCF file into a comparison table using:
  ```bash
  PePa_BC_ComparisonTable.py
  ```
- Filters and formats the output for downstream clustering.

#### **Part 2: SNP Clustering**
- Groups SNPs into ancestry regions using:
  ```bash
  PePa_BC_ClusteringSNPs.py
  ```
- Outputs a clustered file for further processing.

#### **Part 3: Combining and Refining Clusters**
- Combines individual clustering files into a unified dataset:
  ```bash
  PePa_BC_ClustCombine.py
  ```
- Refines clusters based on size thresholds:
  ```bash
  PePa_BC_ClusterClusters.py
  ```
- Outputs:
  - `_Clustered.csv`: Refined ancestry blocks.

#### **Part 4: Chromosome Painting**
- Visualizes ancestry across chromosomes:
  ```bash
  PePa_PC_GenomePaint.r
  ```

---

### **3. Optional Steps**

#### **Optional 1: Genome-Wide Ancestry Percentages**
- Computes and plots the percentage of chromosomes belonging to each ancestry:
  ```bash
  PePa_PC_ntPerc.r
  ```

#### **Optional 2: Gene-Based Ancestry Statistics**
- Converts GTF files into annotation files (if `-G` is provided):
  ```bash
  PePa_PC_ExtracGTF.py
  ```
- Computes gene-level ancestry percentages:
  ```bash
  PePa_PC_GeneToClustRep.py
  PePa_PC_GeneCountPerc.r
  ```

---

## **Outputs**

1. **Tabulated VCF Data:**
   - `<basename>_Tabulated.csv`

2. **Clustered SNP Regions:**
   - `<basename>_Clustered.csv`

3. **Ancestry Visualizations:**
   - `<basename>_ChromosomePaint.png`

4. **Optional Gene-Based Outputs:**
   - `<basename>_GeneAnc.csv`

---

## **Error Handling**
- Prevents incompatible flag combinations (`-i` and `-I`, `-G` and `-A`).
- Exits with descriptive error messages for missing or invalid inputs:
  - Parental VCF files not provided.
  - Clustering size not specified.

---

## **File Compression**
Intermediate clustering files are zipped to reduce clutter:
```bash
<basename>_Clusters.zip
```

---

## **Dependencies**
- **Python scripts**:
  - `PePa_BC_VCFtoTable.py`
  - `PePa_BC_ComparisonTable.py`
  - `PePa_BC_ClusteringSNPs.py`
  - `PePa_BC_ClustCombine.py`
  - `PePa_BC_ClusterClusters.py`
  - `PePa_PC_ExtracGTF.py`
  - `PePa_PC_GeneToClustRep.py`
- **R scripts**:
  - `PePa_PC_GenomePaint.r`
  - `PePa_PC_ntPerc.r`
  - `PePa_PC_GeneCountPerc.r`

---

## **Example Usage**
```bash
# Basic Usage
./pepa.sh -i ListVCF.txt -o Results -1 Parent1.vcf -2 Parent2.vcf -c 100

# Including GTF File for Annotation
./pepa.sh -i ListVCF.txt -o Results -1 Parent1.vcf -2 Parent2.vcf -c 100 -G genes.gtf

# Plotting Chromosome-Level Percentages
./pepa.sh -i ListVCF.txt -o Results -1 Parent1.vcf -2 Parent2.vcf -c 100 -C
```

--- 

For additional help:
```bash
./pepa.sh -h
```
